<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ruleset xmlns="http://pmd.sf.net/ruleset/1.0.0" name="jetq" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd"
 xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd">
 
   <description>PMD Plugin preferences rule set</description>
   <!-- referenced http://pmd.sourceforge.net/pmd-4.3.0/rules/index.html -->
   
   <!-- basic check rules-->
   <rule ref="rulesets/basic.xml/EmptyCatchBlock"/>
   <rule ref="rulesets/basic.xml/EmptyIfStmt"/>
   <rule ref="rulesets/basic.xml/EmptyWhileStmt"/>
   <rule ref="rulesets/basic.xml/EmptyTryBlock"/>
   <rule ref="rulesets/basic.xml/EmptyFinallyBlock"/>
   <rule ref="rulesets/basic.xml/EmptySwitchStatements"/>
   <rule ref="rulesets/basic.xml/JumbledIncrementer"/>
   <rule ref="rulesets/basic.xml/ForLoopShouldBeWhileLoop"/>
   <rule ref="rulesets/basic.xml/UnnecessaryConversionTemporary"/>
   <rule ref="rulesets/basic.xml/OverrideBothEqualsAndHashcode"/>
   <rule ref="rulesets/basic.xml/DoubleCheckedLocking"/>
   <rule ref="rulesets/basic.xml/ReturnFromFinallyBlock"/>
   <rule ref="rulesets/basic.xml/EmptySynchronizedBlock"/>
   <rule ref="rulesets/basic.xml/UnnecessaryReturn"/>
   <rule ref="rulesets/basic.xml/EmptyStaticInitializer"/>
   <rule ref="rulesets/basic.xml/UnconditionalIfStatement"/>
   <rule ref="rulesets/basic.xml/EmptyStatementNotInLoop"/>
   <rule ref="rulesets/basic.xml/BooleanInstantiation"/>
   <rule ref="rulesets/basic.xml/UnnecessaryFinalModifier"/>
   <rule ref="rulesets/basic.xml/CollapsibleIfStatements"/>
   <rule ref="rulesets/basic.xml/UselessOverridingMethod"/>
   <rule ref="rulesets/basic.xml/ClassCastExceptionWithToArray"/>
   <rule ref="rulesets/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
   <rule ref="rulesets/basic.xml/UselessOperationOnImmutable"/>
   <rule ref="rulesets/basic.xml/MisplacedNullCheck"/>
   <rule ref="rulesets/basic.xml/UnusedNullCheckInEquals"/>
   <rule ref="rulesets/basic.xml/AvoidThreadGroup"/>
   <rule ref="rulesets/basic.xml/BrokenNullCheck"/>
   <rule ref="rulesets/basic.xml/BigIntegerInstantiation"/>
   <rule ref="rulesets/basic.xml/AvoidUsingOctalValues"/>
   <rule ref="rulesets/basic.xml/AvoidUsingHardCodedIP"/> 
   <rule ref="rulesets/basic.xml/AvoidMultipleUnaryOperators"/>
   <!-- <rule ref="rulesets/basic.xml/DontCallThreadRun"/>  -->
   
   <rule ref="rulesets/codesize.xml/NPathComplexity"/> 
   <rule ref="rulesets/codesize.xml/ExcessiveMethodLength"/>
   <rule ref="rulesets/codesize.xml/ExcessiveParameterList"/>
   <rule ref="rulesets/codesize.xml/CyclomaticComplexity"/> 
   <rule ref="rulesets/codesize.xml/TooManyFields"/>
   
   <rule ref="rulesets/controversial.xml/UnnecessaryConstructor"/>
   <rule ref="rulesets/controversial.xml/NullAssignment"/>
   <rule ref="rulesets/controversial.xml/OnlyOneReturn"/>
   <rule ref="rulesets/controversial.xml/AssignmentInOperand"/>
   <rule ref="rulesets/controversial.xml/DontImportSun"/>
   <rule ref="rulesets/controversial.xml/SuspiciousOctalEscape"/>
   <rule ref="rulesets/controversial.xml/UnnecessaryParentheses"/>
   <rule ref="rulesets/controversial.xml/DefaultPackage"/>
   <rule ref="rulesets/controversial.xml/BooleanInversion"/>
   <rule ref="rulesets/controversial.xml/AvoidUsingShortType"/>
<!--    <rule ref="rulesets/java/controversial.xml/AvoidLiteralsInIfCondition"/> -->
<!--    <rule ref="rulesets/controversial.xml/UseConcurrentHashMap"/>   -->
<!--    <rule ref="rulesets/controversial.xml/AvoidUsingShortType"/> -->
   
   <!--文件，数据库连接必须关闭-->
   <rule ref="rulesets/design.xml/CloseResource"/>
   <rule ref="rulesets/design.xml/DefaultLabelNotLastInSwitchStmt"/>
   <rule ref="rulesets/design.xml/NonCaseLabelInSwitchStatement"/>
   <rule ref="rulesets/design.xml/OptimizableToArrayCall"/>
   <rule ref="rulesets/design.xml/BadComparison"/>
   <rule ref="rulesets/design.xml/InstantiationToGetClass"/>
   <rule ref="rulesets/design.xml/ImmutableField"/>
   <rule ref="rulesets/design.xml/AvoidProtectedFieldInFinalClass"/>
   <rule ref="rulesets/design.xml/AvoidSynchronizedAtMethodLevel"/>
   <rule ref="rulesets/design.xml/MissingBreakInSwitch"/>
   <rule ref="rulesets/design.xml/UseNotifyAllInsteadOfNotify"/>
   <rule ref="rulesets/design.xml/AvoidInstanceofChecksInCatchClause"/>
   <rule ref="rulesets/design.xml/AbstractClassWithoutAbstractMethod"/>
   <rule ref="rulesets/design.xml/SimplifyConditional"/>
   <rule ref="rulesets/design.xml/CompareObjectsWithEquals"/>
   <rule ref="rulesets/design.xml/PositionLiteralsFirstInComparisons"/>
   <rule ref="rulesets/design.xml/UnnecessaryLocalBeforeReturn"/>
   <rule ref="rulesets/design.xml/NonThreadSafeSingleton"/>
   <rule ref="rulesets/design.xml/PreserveStackTrace"/>
   <rule ref="rulesets/design.xml/UseCollectionIsEmpty"/>
   <rule ref="rulesets/design.xml/SingularField"/>
   <rule ref="rulesets/design.xml/ReturnEmptyArrayRatherThanNull"/>
   
   <rule ref="rulesets/coupling.xml/CouplingBetweenObjects"/>
   <rule ref="rulesets/coupling.xml/ExcessiveImports"/>
   <rule ref="rulesets/coupling.xml/LooseCoupling"/>
   
   <rule ref="rulesets/imports.xml/DuplicateImports"/>
   <rule ref="rulesets/imports.xml/DontImportJavaLang"/>
   <rule ref="rulesets/imports.xml/UnusedImports"/>
   <rule ref="rulesets/imports.xml/ImportFromSamePackage"/>
   <rule ref="rulesets/imports.xml/TooManyStaticImports"/>
  
   <rule ref="rulesets/migrating.xml/ReplaceVectorWithList"/>
   <rule ref="rulesets/migrating.xml/ReplaceHashtableWithMap"/>
   <rule ref="rulesets/migrating.xml/ReplaceEnumerationWithIterator"/>
   <rule ref="rulesets/migrating.xml/AvoidEnumAsIdentifier"/>
   <rule ref="rulesets/migrating.xml/AvoidAssertAsIdentifier"/>
   <rule ref="rulesets/migrating.xml/IntegerInstantiation"/>
   <rule ref="rulesets/migrating.xml/ByteInstantiation"/>
   <rule ref="rulesets/migrating.xml/ShortInstantiation"/>
   <rule ref="rulesets/migrating.xml/LongInstantiation"/>
   <rule ref="rulesets/migrating.xml/JUnit4TestShouldUseBeforeAnnotation"/>
   <rule ref="rulesets/migrating.xml/JUnit4TestShouldUseAfterAnnotation"/>
   <rule ref="rulesets/migrating.xml/JUnit4TestShouldUseTestAnnotation"/>
   <rule ref="rulesets/migrating.xml/JUnit4SuitesShouldUseSuiteAnnotation"/>
   <rule ref="rulesets/migrating.xml/JUnitUseExpected"/>
   
   
   <rule ref="rulesets/naming.xml/ShortVariable"/>
   <rule ref="rulesets/naming.xml/LongVariable"/>
   <rule ref="rulesets/naming.xml/ShortMethodName"/>
   <rule ref="rulesets/naming.xml/VariableNamingConventions"/>
   <rule ref="rulesets/naming.xml/MethodNamingConventions"/>
   <rule ref="rulesets/naming.xml/ClassNamingConventions"/>
   <rule ref="rulesets/naming.xml/AbstractNaming"/>
   <rule ref="rulesets/naming.xml/AvoidDollarSigns"/>
   <rule ref="rulesets/naming.xml/MethodWithSameNameAsEnclosingClass"/>
   <rule ref="rulesets/naming.xml/SuspiciousHashcodeMethodName"/>
   <rule ref="rulesets/naming.xml/SuspiciousConstantFieldName"/>
   <rule ref="rulesets/naming.xml/SuspiciousEqualsMethodName"/>
   <rule ref="rulesets/naming.xml/AvoidFieldNameMatchingTypeName"/>
   <rule ref="rulesets/naming.xml/AvoidFieldNameMatchingMethodName"/>
   <rule ref="rulesets/naming.xml/NoPackage"/>
   <rule ref="rulesets/naming.xml/PackageCase"/>
   <rule ref="rulesets/naming.xml/MisleadingVariableName"/>
   <rule ref="rulesets/naming.xml/BooleanGetMethodName"/>

   <!-- Optimizing check rules-->
   <rule ref="rulesets/optimizations.xml/LocalVariableCouldBeFinal"/>
   <rule ref="rulesets/optimizations.xml/MethodArgumentCouldBeFinal"/>
   <rule ref="rulesets/optimizations.xml/AvoidInstantiatingObjectsInLoops"/>
   <rule ref="rulesets/optimizations.xml/UseArrayListInsteadOfVector"/>
   <rule ref="rulesets/optimizations.xml/SimplifyStartsWith"/>
   <rule ref="rulesets/optimizations.xml/UseStringBufferForStringAppends"/>
   <rule ref="rulesets/optimizations.xml/UseArraysAsList"/>
   <rule ref="rulesets/optimizations.xml/AvoidArrayLoops"/>
   <rule ref="rulesets/optimizations.xml/UnnecessaryWrapperObjectCreation"/>
   <rule ref="rulesets/optimizations.xml/AddEmptyString"/>
 
   <rule ref="rulesets/strings.xml/AvoidDuplicateLiterals"/>
   <rule ref="rulesets/strings.xml/StringInstantiation"/>
   <rule ref="rulesets/strings.xml/StringToString"/>
   <rule ref="rulesets/strings.xml/InefficientStringBuffering"/>
   <rule ref="rulesets/strings.xml/UnnecessaryCaseChange"/>
   <rule ref="rulesets/strings.xml/UseStringBufferLength"/>
   <rule ref="rulesets/strings.xml/AppendCharacterWithChar"/>
   <rule ref="rulesets/strings.xml/ConsecutiveLiteralAppends"/>
   <rule ref="rulesets/strings.xml/UseIndexOfChar"/>
   <rule ref="rulesets/strings.xml/InefficientEmptyStringCheck"/>
   <rule ref="rulesets/strings.xml/InsufficientStringBufferDeclaration"/>
   <rule ref="rulesets/strings.xml/UselessStringValueOf"/>
   <rule ref="rulesets/strings.xml/StringBufferInstantiationWithChar"/>
   <rule ref="rulesets/strings.xml/UseEqualsToCompareStrings"/>
   <rule ref="rulesets/strings.xml/AvoidStringBufferField"/>
  
  
   <rule ref="rulesets/typeresolution.xml/LooseCoupling"/>
   <rule ref="rulesets/typeresolution.xml/CloneMethodMustImplementCloneable"/>
   <rule ref="rulesets/typeresolution.xml/UnusedImports"/>
   <rule ref="rulesets/typeresolution.xml/SignatureDeclareThrowsException"/>
 
</ruleset>
